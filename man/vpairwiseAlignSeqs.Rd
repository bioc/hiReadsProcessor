% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hiReadsProcessor.R
\name{vpairwiseAlignSeqs}
\alias{vpairwiseAlignSeqs}
\title{Align a short pattern to variable length target sequences.}
\usage{
vpairwiseAlignSeqs(subjectSeqs = NULL, patternSeq = NULL, side = "left",
  qualityThreshold = 1, showStats = FALSE, bufferBases = 5, doRC = TRUE,
  parallel = FALSE, ...)
}
\arguments{
\item{subjectSeqs}{DNAStringSet object containing sequences to be searched for the pattern. This is generally bigger than patternSeq, and cases where subjectSeqs is smaller than patternSeq will be ignored in the alignment.}

\item{patternSeq}{DNAString object or a sequence containing the query sequence to search. This is generally smaller than subjectSeqs.}

\item{side}{which side of the sequence to perform the search: left, right, or middle. Default is 'left'.}

\item{qualityThreshold}{percent of patternSeq to match. Default is 1, full match. This is supplied to max.mismatch parameter of \code{\link{vmatchPattern}} as round(nchar(patternSeq)*(1-qualityThreshold)).}

\item{showStats}{toggle output of search statistics. Default is FALSE.}

\item{bufferBases}{use x number of bases in addition to patternSeq length to perform the search. Beneficial in cases where the pattern has homopolymers or indels compared to the subject. Default is 5. Doesn't apply when side='middle'.}

\item{doRC}{perform reverse complement search of the defined pattern. Default is TRUE.}

\item{parallel}{use parallel backend to perform calculation with 
\code{\link{BiocParallel}}. Defaults to FALSE. If no parallel backend is 
registered, then a serial version is ran using \code{\link{SerialParam}}.}

\item{...}{extra parameters for \code{\link{vmatchPattern}} except for 'max.mismatch' since it's calculated internally using the 'qualityThreshold' parameter.}
}
\value{
IRanges object with starts, stops, and names of the aligned sequences.
}
\description{
Align a fixed length short pattern sequence to subject sequences using \code{\link{vmatchPattern}}. This function is meant for aligning a short pattern onto large collection of subjects. If you are looking to align a vector sequence to subjects, then please use BLAT.
}
\note{
\itemize{
 \item For qualityThreshold, the alignment score is calculated by (matches*2)-(mismatches+gaps) which programatically translates to round(nchar(patternSeq)*qualityThreshold)*2.
 \item No indels are allowed in the function, if expecting indels then use \code{\link{pairwiseAlignSeqs}}.
 \item If qualityThreshold is 1, then it is a full match, if 0, then any match is accepted which is useful in searching linker sequences at 3' end. Beware, this function only searches for the pattern sequence in one orientation. If you are expecting to find the pattern in both orientation, you might be better off using BLAST/BLAT!
 \item If parallel=TRUE, then be sure to have a parallel backend registered 
 before running the function. One can use any of the following 
 \code{\link{MulticoreParam}} \code{\link{SnowParam}}
}
}
\examples{
subjectSeqs <- c("CCTGAATCCTGGCAATGTCATCATC", "ATCCTGGCAATGTCATCATCAATGG", 
"ATCAGTTGTCAACGGCTAATACGCG", "ATCAATGGCGATTGCCGCGTCTGCA", 
"CCGCGTCTGCAATGTGAGGGCCTAA", "GAAGGATGCCAGTTGAAGTTCACAC")
subjectSeqs <- DNAStringSet(xscat("AAAAAAAAAA", subjectSeqs))
vpairwiseAlignSeqs(subjectSeqs, "AAAAAAAAAA", showStats=TRUE)
vpairwiseAlignSeqs(subjectSeqs, "AAAAAAAAAA", showStats=TRUE,
qualityThreshold=0.5)
}
\seealso{
\code{\link{pairwiseAlignSeqs}}, \code{\link{primerIDAlignSeqs}}, 
\code{\link{doRCtest}}, \code{\link{findAndTrimSeq}}, \code{\link{blatSeqs}}, 
\code{\link{findAndRemoveVector}}
}

